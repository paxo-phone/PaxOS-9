; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env]
test_framework = googletest

[env:esp32dev]
platform = espressif32
board = esp32dev
framework = arduino, espidf
monitor_speed = 115200
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
build_flags = 
	-DPLATFORM_ESP32DEV
	-DCONFIG_FATFS_MAX_LFN=255
	-I include
	-fexceptions

[env:paxo-v5]
platform = espressif32
board = esp-wrover-kit
framework = arduino
board_build.partitions = huge_app.csv
monitor_speed = 115200
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
build_flags = 
	-std=gnu++17
	-DPLATFORM_PAXO_V5
	-DCONFIG_FATFS_MAX_LFN=255
	-I include
	-fexceptions
	-Wno-error=maybe-uninitialized
	-Wno-reorder
	-DBOARD_HAS_PSRAM
	-mfix-esp32-psram-cache-issue
	-DCONFIG_SPIRAM_CACHE_WORKAROUND
	-DCORE_DEBUG_LEVEL=5
	-DSOL_NO_THREAD_LOCAL=1
	-mtext-section-literals
build_unflags = 
	-std=gnu++11
	-std=gnu++14

; You need to have mingw64 installed

[env:windows]
platform = native
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
	plerup/EspSoftwareSerial@^8.2.0
	maxgerhardt/ghostl@^1.0.1
	mbed-babylonica/AsyncSerial@0.0.0+sha.278f7f125495
test_framework = googletest

test_testing_command =
    ${platformio.build_dir}/${this.__env__}/program
build_flags =
    -std=c++17
    -lm
    -Iextern/SDL2-2.28.5/x86_64-w64-mingw32/include/SDL2
    -Lextern/SDL2-2.28.5/x86_64-w64-mingw32/lib
    -lSDL2main
    -lSDL2
    -m64
    -Wa,-mbig-obj
extra_scripts =
    pre:scripts/platformio/windows/setup_workspace.py
    pre:scripts/platformio/windows/copy_dependencies.py
    scripts/platformio/windows/execute.py
targets = execute

[env:windows-build-only]
platform = native
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
	plerup/EspSoftwareSerial@^8.2.0
	maxgerhardt/ghostl@^1.0.1
	mbed-babylonica/AsyncSerial@0.0.0+sha.278f7f125495
build_flags =
    -std=c++17
    -lm
    -Iextern/SDL2-2.28.5/x86_64-w64-mingw32/include/SDL2
    -Lextern/SDL2-2.28.5/x86_64-w64-mingw32/lib
    -lSDL2main
    -lSDL2
    -m64
    -Wa,-mbig-obj
extra_scripts =
    pre:scripts/platformio/windows/setup_workspace.py
    pre:scripts/platformio/windows/copy_dependencies.py

[env:linux]
platform = native
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
	plerup/EspSoftwareSerial@^8.2.0
	maxgerhardt/ghostl@^1.0.1
	mbed-babylonica/AsyncSerial@0.0.0+sha.278f7f125495
test_framework = googletest
build_flags = 
	-std=c++17
	-lm
	-lSDL2main
	-lSDL2
	-g
	-I/usr/local/include/SDL2
	-L/usr/local/lib

[env:macos]
platform = native
lib_deps = 
	lovyan03/LovyanGFX@^1.1.9
	plerup/EspSoftwareSerial@^8.2.0
	maxgerhardt/ghostl@^1.0.1
	mbed-babylonica/AsyncSerial@0.0.0+sha.278f7f125495
test_framework = googletest
build_flags = 
	-std=c++20
	-lm
	-lSDL2main
	-lSDL2
	-I/usr/local/include/SDL2 # we include both /usr/local/ and /opt/homebrew/ to support the macOS silicon and Intel as explained here https://stackoverflow.com/a/71186857/16456439 
	-L/usr/local/lib
	-I/opt/homebrew/include/SDL2
	-L/opt/homebrew/lib

[env:test]
platform = native
test_framework = googletest
build_flags = 
	-std=c++23
	-lm
lib_ignore = 
	graphics
lib_deps = 
	plerup/EspSoftwareSerial@^8.2.0
	maxgerhardt/ghostl@^1.0.1
	mbed-babylonica/AsyncSerial@0.0.0+sha.278f7f125495
